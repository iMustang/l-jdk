package enumeration;

/**
 * RainbowColor
 * description:使用接口来定义常量
 * <p>
 * 使用这种方式定义的问题：
 * 1. 类型不安全
 * 由于颜色常量的对应值是整数形，所以程序执行过程中很可能给颜色变量传入一个任意的整数值，导致出现错误。
 * <p>
 * 2. 没有命名空间
 * 由于颜色常量只是类的属性，当使用时不得不通过类来访问。
 * <p>
 * 3. 一致性差
 * 整形枚举属于编译期常量，所以编译完成后，所有客户端和服务器端引用的地方，会直接将整数值写入。
 * 这样，当修改旧的枚举整数值或者增加新的枚举值后，所有引用的地方都需要重新编译，否则运行时刻就会出现错误。
 * <p>
 * 4. 类型无指意性
 * 由于颜色枚举值仅仅是一些无任何含义的整数值，如果在运行期调试时，会发现日志中有很多魔术数字，很难明白其奥秘。
 */
public class RainbowColor {
	int RED = 0;
	int ORANGE = 1;
	int YELLOW = 2;
	int GREEN = 3;
	int CYAN = 4;
	int BLUE = 5;
	int PURPLE = 6;
}
